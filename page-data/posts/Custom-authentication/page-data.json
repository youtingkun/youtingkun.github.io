{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Custom-authentication","result":{"data":{"markdownRemark":{"id":"74795cb5-3ffd-59d9-b271-963fdeb68336","html":"<h1 id=\"实现方法\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95\" aria-label=\"实现方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现方法</h1>\n<ul>\n<li>简单来说就是先在 el-table 外面套一个 el-form。</li>\n<li>然后再在表格的模板 template 里面包含 el-form-item。</li>\n<li>在绑定 prop 的时候要注意绑定的是每一个 item 的 prop</li>\n</ul>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&lt;el-form ref=&quot;ruleForm&quot; :model=&quot;ruleForm&quot; :rules=&quot;rules&quot; :inline-message=&quot;true&quot;&gt;\n  &lt;el-table :data=&quot;ruleForm.purchaseList&quot;&gt;\n    &lt;el-table-column label=&quot;数量&quot; prop=&quot;goodsNumber&quot;&gt;\n      &lt;template slot-scope=&quot;scope&quot;&gt;\n        &lt;el-form-item :prop=&quot;`purchaseList.${scope.$index}.goodsNumber`&quot; :rules=&quot;rules.test&quot;&gt;\n          &lt;el-input\n            size=&quot;mini&quot;\n            type=&quot;number&quot;\n            v-model=&quot;scope.row.goodsNumber&quot;\n            placeholder=&quot;请输入数量&quot;\n          &gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n      &lt;/template&gt;\n    &lt;/el-table-column&gt;\n    &lt;/el-table-column&gt;\n  &lt;/el-table&gt;\n&lt;/el-form&gt;</code>\n        </deckgo-highlight-code>\n<!--more-->\n<deckgo-highlight-code   >\n          <code slot=\"code\">  ruleForm: {\n    purchaseList: []\n  },\n  rules: {\n    test: [{ required: true, message: &quot;请输入&quot;, trigger: &quot;change&quot; }]\n  }</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code   >\n          <code slot=\"code\">  submitStep() {\n    this.$refs.ruleForm.validate(valid =&gt; {\n      if (valid) {\n        alert(&quot;submit!&quot;);\n      } else {\n        console.log(&quot;error submit!!&quot;);\n        return false;\n      }\n  })</code>\n        </deckgo-highlight-code>","fields":{"slug":"/posts/Custom-authentication","tagSlugs":["/tag/element表格/"]},"frontmatter":{"date":"2019-06-21 20:14:03","description":"","tags":["Element表格"],"title":"在表格的自定义列里面实现自定义验证"}},"previous":{"fields":{"slug":"/posts/vue-life-cycle"},"frontmatter":{"title":"vue实例生命周期、vue父子组件生命周期、router生命周期、vuex生命周期的区别和联系"}},"next":{"fields":{"slug":"/posts/compressed-image"},"frontmatter":{"title":"前端压缩图片"}}},"pageContext":{"slug":"/posts/Custom-authentication","previousPostSlug":"/posts/vue-life-cycle","nextPostSlug":"/posts/compressed-image"}},"staticQueryHashes":["2281626716","251939775","401334301"]}