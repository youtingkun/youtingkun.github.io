{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Vue-slot","result":{"data":{"markdownRemark":{"id":"5e157b26-5276-5f48-a6c6-8edf60d0a812","html":"<h1 id=\"1父子组件之间的传值\" style=\"position:relative;\"><a href=\"#1%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E5%80%BC\" aria-label=\"1父子组件之间的传值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.父子组件之间的传值</h1>\n<h3 id=\"子组件传值到父组件\" style=\"position:relative;\"><a href=\"#%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC%E5%88%B0%E7%88%B6%E7%BB%84%E4%BB%B6\" aria-label=\"子组件传值到父组件 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>子组件传值到父组件</h3>\n<p>子组件在向父组件传值的时候，主要是通过子组件通过$emit()函数派发出事件，然后再父组件中通过事件监听:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//比如定义了一个子组件&lt;i-button&gt;\n&lt;template&gt;\n  &lt;button @click=&quot;handleClick&quot;&gt;\n    &lt;slot&gt;&lt;/slot&gt;\n  &lt;/button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n  export default {\n    methods: {\n      handleClick () {\n        this.$emit(&#39;on-click&#39;, {a:123});\n      }\n    }\n  }\n&lt;/script&gt;\n//这里的on-click是事件的名字，a是要传递的参数\n\n//然后在父组件中监听\n&lt;i-button @on-click=&quot;sayhi&quot;&gt;sayhi&lt;/i-button&gt;\n\n&lt;script&gt;\n  export default {\n        methods:{\n         sayhi(b){\n          console.log(b);  // Vue.js\n        }\n      }\n  }\n&lt;/script&gt;\n//注意这里的b只是用来接收子组件传递过来的对象，输入的是{a:123},并不会输出123,如果输出123可以写成b.a</code>\n        </deckgo-highlight-code>\n<!--more-->\n<h3 id=\"父组件向子组件传值\" style=\"position:relative;\"><a href=\"#%E7%88%B6%E7%BB%84%E4%BB%B6%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%80%BC\" aria-label=\"父组件向子组件传值 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>父组件向子组件传值</h3>\n<p>父组件向子组件传值，主要是通过子组件的 prop 属性来接收父组件的数据:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//比如在父组件中声明传值\n&lt;i-button :title=titleData&gt;&lt;/i-button&gt;\n\ndata(){\n    return{\n      titleData:&#39;hello props&#39;\n    }\n},\n\n//在子组件&lt;i-button&gt;中接收\n&lt;h3&gt;{{title}}&lt;/h3&gt;\n\nprops: [&quot;title&quot;],\n\n//这里就会显示为&lt;h3&gt;helo props&lt;/h3&gt;</code>\n        </deckgo-highlight-code>\n<p>或者使用 props 中声明的为对象的方式:</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//在父组件中声明传值\n&lt;i-button :title=titleData&gt;&lt;/i-button&gt;\n\ndata(){\n    return{\n      titleData:&#39;hello props&#39;\n    }\n},\n\n//在子组件&lt;i-button&gt;中接收\n&lt;h3&gt;{{title}}&lt;/h3&gt;\n\nprops: {\n    title:{\n\n    },\n},\n\n//这里也会显示为&lt;h3&gt;helo props&lt;/h3&gt;</code>\n        </deckgo-highlight-code>\n<h1 id=\"2插槽传值插槽的定义是子组件显示什么内容由父组件决定\" style=\"position:relative;\"><a href=\"#2%E6%8F%92%E6%A7%BD%E4%BC%A0%E5%80%BC%E6%8F%92%E6%A7%BD%E7%9A%84%E5%AE%9A%E4%B9%89%E6%98%AF%E5%AD%90%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E4%BB%80%E4%B9%88%E5%86%85%E5%AE%B9%E7%94%B1%E7%88%B6%E7%BB%84%E4%BB%B6%E5%86%B3%E5%AE%9A\" aria-label=\"2插槽传值插槽的定义是子组件显示什么内容由父组件决定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.插槽传值，插槽的定义是子组件显示什么内容由父组件决定</h1>\n<h3 id=\"插槽传值的基本用法\" style=\"position:relative;\"><a href=\"#%E6%8F%92%E6%A7%BD%E4%BC%A0%E5%80%BC%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\" aria-label=\"插槽传值的基本用法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插槽传值的基本用法：</h3>\n<deckgo-highlight-code   >\n          <code slot=\"code\">比如定义了一个子组件&lt;i-button&gt;\n&lt;template&gt;\n  &lt;button&gt;\n    &lt;slot&gt;&lt;/slot&gt;\n  &lt;/button&gt;\n&lt;/template&gt;\n\n在父组件中使用\n&lt;i-button&gt;按钮1&lt;i-button&gt;\n\n这里就会显示成为\n&lt;button&gt;按钮1&lt;button&gt;</code>\n        </deckgo-highlight-code>\n<h3 id=\"给插槽起个名字\" style=\"position:relative;\"><a href=\"#%E7%BB%99%E6%8F%92%E6%A7%BD%E8%B5%B7%E4%B8%AA%E5%90%8D%E5%AD%97\" aria-label=\"给插槽起个名字 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>给插槽起个名字：</h3>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//子组件\n&lt;template&gt;\n  &lt;button&gt;\n    &lt;slot name=&quot;icon&quot;&gt;&lt;/slot&gt;\n    &lt;slot&gt;solot里面默认的内容&lt;/slot&gt;\n  &lt;/button&gt;\n&lt;/template&gt;\n\n//父组件\n&lt;i-button slot=&quot;icon&quot;&gt;按钮1&lt;/i-button&gt;\n&lt;i-button &gt;按钮2&lt;/i-button&gt;\n&lt;i-button &gt;&lt;/i-button&gt;\n\n//这里解释一下\n1.如果在父组件中使用的时候给slot赋值了名字，那么这里子组件就会显示&lt;button&gt;按钮1&lt;/button&gt;\n2.如果在父组件中没有赋值名字，但给了子组件要显示的内容，那么这里子组件就会显示&lt;button&gt;按钮2&lt;/button&gt;\n3.如果在父组件中没有赋值名字，也没有给了子组件要显示的内容，那么这里子组件就会显示默认的内容&lt;button&gt;solot里面默认的内容&lt;/button&gt;</code>\n        </deckgo-highlight-code>\n<h3 id=\"作用域插槽\" style=\"position:relative;\"><a href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%8F%92%E6%A7%BD\" aria-label=\"作用域插槽 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>作用域插槽：</h3>\n<p>如果我们在父组件中这样写：</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">&lt;i-button &gt;{{titleData}}&lt;/i-button&gt;</code>\n        </deckgo-highlight-code>\n<p>这里的 titleData 是父组件中的数据，这样写是不能够正常工作的，因为 titleData 是父组件的数据，子组件并不能获取到，这个时候就需要用到我们的作用域插槽了。</p>\n<p>父组件来访问子组件的数据：</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//父组件\n&lt;i-button &gt;\n  &lt;template  slot-scope=&quot;parentName&quot;&gt;{{parentName.childrenName}}&lt;/template&gt;\n&lt;/i-button&gt;\n\n//子组件&lt;i-button&gt;\n&lt;template&gt;\n  &lt;button&gt;\n    &lt;slot :childrenName=&quot;childrenData&quot;&gt;&lt;/slot&gt;\n  &lt;/button&gt;\n&lt;/template&gt;\n\ndata(){\n    return{\n      childrenData:&quot;hello slot-scope&quot;\n    }\n},\n\n//这里父组件就会拿到子组件childrenData的值，显示为&lt;button&gt;hello slot-scope&lt;/button&gt;\n//解释下，parentName可以理解是父组件与子组件之间的标识，childrenName才是真正绑定的数据</code>\n        </deckgo-highlight-code>\n<p>如果我们从父组件中传值过去到子组件中显示，就需要利用父子组件之间传值的方法了：</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">//父组件\n&lt;i-button :parenDataName=&quot;parentData&quot;&gt;\n  &lt;template  slot-scope=&quot;parentName&quot;&gt;{{parentName.childrenName}}&lt;/template&gt;\n&lt;/i-button&gt;\n\ndata(){\n    return{\n      parentData:&quot;hello slot-scope parent&quot;\n    }\n  },\n\n//子组件&lt;i-button&gt;\n&lt;template&gt;\n  &lt;button&gt;\n    &lt;slot :childrenName=&quot;childrenData&quot;&gt;&lt;/slot&gt;\n  &lt;/button&gt;\n  &lt;button&gt;\n    &lt;slot :childrenName=&quot;parentDataName&quot;&gt;&lt;/slot&gt;\n  &lt;/button&gt;\n&lt;/template&gt;\n\nprops: {\n    parentDataName:{}\n},\ndata(){\n    return{\n      childrenData:&quot;hello slot-scope children&quot;\n    }\n},\n\n//这里一个是直接访问子组件中的值，一个是先自己传递过去之后再访问子组件中的值</code>\n        </deckgo-highlight-code>\n<h1 id=\"区别\" style=\"position:relative;\"><a href=\"#%E5%8C%BA%E5%88%AB\" aria-label=\"区别 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>区别</h1>\n<p>现在我们已经知道了插槽与父子组件之间传值的基本用法，那么他们之间有什么区别呢？我概况为以下几点</p>\n<deckgo-highlight-code   >\n          <code slot=\"code\">1.插槽之间的传值，插槽要显示的内容是写在父组件中的，也就是父组件中的数据是写在自己的组件里。\n2.而父子组件之间的传值，是在当前组件拿到了数据之后，然后才在当自己的组件中显示。\n3.如果说他们之间有什么联系的话，插槽传值，其实类似于父组件向子组件传值。而插槽默认值的写法又像是子组件向父组件传值，只是如果父组件有传值过来，会被覆盖掉了而已。</code>\n        </deckgo-highlight-code>","fields":{"slug":"/posts/Vue-slot","tagSlugs":["/tag/vue传值/"]},"frontmatter":{"date":"2019-03-06 20:29:57","description":"","tags":["vue传值"],"title":"vue插槽与父子组件传值"}},"previous":{"fields":{"slug":"/posts/let-var"},"frontmatter":{"title":"let和var不得不说的关系"}},"next":{"fields":{"slug":"/posts/vue-life-cycle"},"frontmatter":{"title":"vue实例生命周期、vue父子组件生命周期、router生命周期、vuex生命周期的区别和联系"}}},"pageContext":{"slug":"/posts/Vue-slot","previousPostSlug":"/posts/let-var","nextPostSlug":"/posts/vue-life-cycle"}},"staticQueryHashes":["2281626716","251939775","401334301"]}