{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/binary-tree","result":{"data":{"markdownRemark":{"id":"1515c022-c4d7-52bc-86b4-9207a7dda720","html":"<deckgo-highlight-code   >\n          <code slot=\"code\">创建\nfunction Node(data,left,right){\n\tthis.data = data;//数值\n\tthis.left = left;//左节点\n\tthis.right = right;//右节点\n};</code>\n        </deckgo-highlight-code>\n<h2 id=\"--more--\" style=\"position:relative;\"><a href=\"#--more--\" aria-label=\"  more   permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><!--more--></h2>\n<deckgo-highlight-code   >\n          <code slot=\"code\">插入二叉树\nfunction insert(node,data){\n\t//创建一个新的节点\n\tlet newNode  = new Node(data,null,null);\n\t//判断是否存在根节点，没有将新节点存入\n\tif(node == null){\n\t\tnode = newNode;\n\t}else{\n\t\t//获取根节点\n\t\tlet current = node;\n\t\tlet parent;\n\t\twhile(true){\n\t\t\t//将当前节点保存为父节点\n\t\t\tparent = current;\n\t\t\t//将小的数据放在左节点\n\t\t\tif(data &lt; current.data){\n\t\t\t\t//获取当前节点的左节点\n\t\t\t\t//判断当前节点下的左节点是否有数据\n\t\t\t\tcurrent = current.left;\n\t\t\t\tif(current == null){\n\t\t\t\t\t//如果没有数据将新节点存入当前节点下的左节点\n\t\t\t\t\tparent.left = newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tcurrent = current.right;\n\t\t\t\tif(current == null){\n\t\t\t\t\tparent.right = newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}</code>\n        </deckgo-highlight-code>\n<hr>\n<deckgo-highlight-code   >\n          <code slot=\"code\">翻转二叉树\nfunction invertTree(node) {\n\tif (node !== null) {\n\t\tnode.left, node.right = node.left, node.right;\n\t\tinvertTree(node.left);\n\t\tinvertTree(node.right);\n\t}\n\treturn node;\n}</code>\n        </deckgo-highlight-code>","fields":{"slug":"/posts/binary-tree","tagSlugs":["/tag/javascript/","/tag/二叉树/"]},"frontmatter":{"date":"2018-11-21 14:49:23","description":"","tags":["javascript","二叉树"],"title":"二叉树相关"}},"previous":{"fields":{"slug":"/posts/Common-CSS-Layouts"},"frontmatter":{"title":"css常用布局实现"}},"next":{"fields":{"slug":"/posts/What-happens-from-the-URL-to-the-page-display"},"frontmatter":{"title":"从URL到页面显示发生了什么"}}},"pageContext":{"slug":"/posts/binary-tree","previousPostSlug":"/posts/Common-CSS-Layouts","nextPostSlug":"/posts/What-happens-from-the-URL-to-the-page-display"}},"staticQueryHashes":["2281626716","251939775","401334301"]}